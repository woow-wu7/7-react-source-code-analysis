{"version":3,"file":"menu-button.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/menu-button!\n *\n * An accessible dropdown menu for the common dropdown menu button design\n * pattern.\n *\n * @see Docs     https://reach.tech/menu-button\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/menu-button\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n *\n * TODO: Fix flash when opening a menu button on a screen with another open menu\n */\n\nimport React, {\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useId } from \"@reach/auto-id\";\nimport Popover, { Position } from \"@reach/popover\";\nimport {\n  createDescendantContext,\n  Descendant,\n  DescendantProvider,\n  useDescendant,\n  useDescendants,\n  useDescendantsInit,\n  useDescendantKeyDown,\n} from \"@reach/descendants\";\nimport {\n  checkStyles,\n  createNamedContext,\n  forwardRefWithAs,\n  getOwnerDocument,\n  isFunction,\n  isString,\n  makeId,\n  noop,\n  useForkedRef,\n  usePrevious,\n  wrapEvent,\n} from \"@reach/utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Actions\n\nconst CLEAR_SELECTION_INDEX = \"CLEAR_SELECTION_INDEX\";\nconst CLICK_MENU_ITEM = \"CLICK_MENU_ITEM\";\nconst CLOSE_MENU = \"CLOSE_MENU\";\nconst OPEN_MENU_AT_FIRST_ITEM = \"OPEN_MENU_AT_FIRST_ITEM\";\nconst OPEN_MENU_AT_INDEX = \"OPEN_MENU_AT_INDEX\";\nconst OPEN_MENU_CLEARED = \"OPEN_MENU_CLEARED\";\nconst SEARCH_FOR_ITEM = \"SEARCH_FOR_ITEM\";\nconst SELECT_ITEM_AT_INDEX = \"SELECT_ITEM_AT_INDEX\";\nconst SET_BUTTON_ID = \"SET_BUTTON_ID\";\n\nconst MenuDescendantContext = createDescendantContext<MenuButtonDescendant>(\n  \"MenuDescendantContext\"\n);\nconst MenuContext = createNamedContext<InternalMenuContextValue>(\n  \"MenuContext\",\n  {} as InternalMenuContextValue\n);\n\nconst initialState: MenuButtonState = {\n  // The button ID is needed for aria controls and can be set directly and\n  // updated for top-level use via context. Otherwise a default is set by useId.\n  // TODO: Consider deprecating direct ID in 1.0 in favor of id at the top level\n  //       for passing deterministic IDs to descendent components.\n  buttonId: null,\n\n  // Whether or not the menu is expanded\n  isExpanded: false,\n\n  // When a user begins typing a character string, the selection will change if\n  // a matching item is found\n  typeaheadQuery: \"\",\n\n  // The index of the current selected item. When the selection is cleared a\n  // value of -1 is used.\n  selectionIndex: -1,\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Menu\n *\n * The wrapper component for the other components. No DOM element is rendered.\n *\n * @see Docs https://reach.tech/menu-button#menu\n */\nexport const Menu: React.FC<MenuProps> = ({ id, children }) => {\n  let buttonRef = useRef(null);\n  let menuRef = useRef(null);\n  let popoverRef = useRef(null);\n  let [descendants, setDescendants] = useDescendantsInit<\n    MenuButtonDescendant\n  >();\n  let [state, dispatch] = useReducer(reducer, initialState);\n  let _id = useId(id);\n  let menuId = id || makeId(\"menu\", _id);\n\n  // We use an event listener attached to the window to capture outside clicks\n  // that close the menu. We don't want the initial button click to trigger this\n  // when a menu is closed, so we can track this behavior in a ref for now.\n  // We shouldn't need this when we rewrite with state machine logic.\n  let buttonClickedRef = useRef(false);\n\n  // We will put children callbacks in a ref to avoid triggering endless render\n  // loops when using render props if the app code doesn't useCallback\n  // https://github.com/reach/reach-ui/issues/523\n  let selectCallbacks = useRef([]);\n\n  // If the popover's position overlaps with an option when the popover\n  // initially opens, the mouseup event will trigger a select. To prevent that,\n  // we decide the menu button is only ready to make a selection if the pointer\n  // moves first, otherwise the user is just registering the initial button\n  // click rather than selecting an item. This is similar to a native select\n  // on most platforms, and our menu button popover works similarly.\n  let readyToSelect = useRef(false);\n\n  let context: InternalMenuContextValue = {\n    buttonRef,\n    dispatch,\n    menuId,\n    menuRef,\n    popoverRef,\n    buttonClickedRef,\n    readyToSelect,\n    selectCallbacks,\n    state,\n  };\n\n  // When the menu is open, focus is placed on the menu itself so that\n  // keyboard navigation is still possible.\n  useEffect(() => {\n    if (state.isExpanded) {\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = true;\n      window.requestAnimationFrame(() => {\n        focus(menuRef.current);\n      });\n    } else {\n      // We want to ignore the immediate focus of a tooltip so it doesn't pop\n      // up again when the menu closes, only pops up when focus returns again\n      // to the tooltip (like native OS tooltips).\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = false;\n    }\n  }, [state.isExpanded]);\n\n  useEffect(() => checkStyles(\"menu-button\"), []);\n\n  return (\n    <DescendantProvider\n      context={MenuDescendantContext}\n      items={descendants}\n      set={setDescendants}\n    >\n      <MenuContext.Provider value={context}>\n        {isFunction(children)\n          ? children({\n              isExpanded: state.isExpanded,\n              // TODO: Remove in 1.0\n              isOpen: state.isExpanded,\n            })\n          : children}\n      </MenuContext.Provider>\n    </DescendantProvider>\n  );\n};\n\n/**\n * @see Docs https://reach.tech/menu-button#menu-props\n */\nexport interface MenuProps {\n  /**\n   * Requires two children: a `<MenuButton>` and a `<MenuList>`.\n   *\n   * @see Docs https://reach.tech/menu-button#menu-children\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: MenuContextValue & {\n          // TODO: Remove in 1.0\n          isOpen: boolean;\n        }\n      ) => React.ReactNode);\n  id?: string;\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\";\n  Menu.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuButton\n *\n * Wraps a DOM `button` that toggles the opening and closing of the dropdown\n * menu. Must be rendered inside of a `<Menu>`.\n *\n * @see Docs https://reach.tech/menu-button#menubutton\n */\nexport const MenuButton = forwardRefWithAs<MenuButtonProps, \"button\">(\n  function MenuButton(\n    { as: Comp = \"button\", onKeyDown, onMouseDown, id, ...props },\n    forwardedRef\n  ) {\n    let {\n      buttonRef,\n      buttonClickedRef,\n      menuId,\n      state: { buttonId, isExpanded },\n      dispatch,\n    } = useContext(MenuContext);\n    let ref = useForkedRef(buttonRef, forwardedRef);\n    let items = useDescendants(MenuDescendantContext);\n    let firstNonDisabledIndex = useMemo(\n      () => items.findIndex((item) => !item.disabled),\n      [items]\n    );\n    useEffect(() => {\n      let newButtonId =\n        id != null\n          ? id\n          : menuId\n          ? makeId(\"menu-button\", menuId)\n          : \"menu-button\";\n      if (buttonId !== newButtonId) {\n        dispatch({\n          type: SET_BUTTON_ID,\n          payload: newButtonId,\n        });\n      }\n    }, [buttonId, dispatch, id, menuId]);\n\n    function handleKeyDown(event: React.KeyboardEvent) {\n      switch (event.key) {\n        case \"ArrowDown\":\n        case \"ArrowUp\":\n          event.preventDefault(); // prevent scroll\n          dispatch({\n            type: OPEN_MENU_AT_INDEX,\n            payload: { index: firstNonDisabledIndex },\n          });\n          break;\n        case \"Enter\":\n        case \" \":\n          dispatch({\n            type: OPEN_MENU_AT_INDEX,\n            payload: { index: firstNonDisabledIndex },\n          });\n          break;\n        default:\n          break;\n      }\n    }\n\n    function handleMouseDown(event: React.MouseEvent) {\n      if (!isExpanded) {\n        buttonClickedRef.current = true;\n      }\n      if (isRightClick(event.nativeEvent)) {\n        return;\n      } else if (isExpanded) {\n        dispatch({ type: CLOSE_MENU, payload: { buttonRef } });\n      } else {\n        dispatch({ type: OPEN_MENU_CLEARED });\n      }\n    }\n\n    return (\n      <Comp\n        // When the menu is displayed, the element with role `button` has\n        // `aria-expanded` set to `true`. When the menu is hidden, it is\n        // recommended that `aria-expanded` is not present.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        aria-expanded={isExpanded ? true : undefined}\n        // The element with role `button` has `aria-haspopup` set to either\n        // `\"menu\"` or `true`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        aria-haspopup\n        // Optionally, the element with role `button` has a value specified for\n        // `aria-controls` that refers to the element with role `menu`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        aria-controls={menuId}\n        {...props}\n        ref={ref}\n        data-reach-menu-button=\"\"\n        id={buttonId || undefined}\n        onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n        onMouseDown={wrapEvent(onMouseDown, handleMouseDown)}\n        type=\"button\"\n      />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menubutton-props\n */\nexport type MenuButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  /**\n   * Accepts any renderable content.\n   *\n   * @see Docs https://reach.tech/menu-button#menubutton-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\";\n  MenuButton.propTypes = {\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItemImpl\n *\n * MenuItem and MenuLink share most of the same functionality captured here.\n */\nconst MenuItemImpl = forwardRefWithAs<MenuItemImplProps, \"div\">(\n  function MenuItemImpl(\n    {\n      as: Comp,\n      index: indexProp,\n      isLink = false,\n      onClick,\n      onDragStart,\n      onMouseDown,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseMove,\n      onMouseUp,\n      onSelect,\n      disabled,\n      valueText: valueTextProp,\n      ...props\n    },\n    forwardedRef\n  ) {\n    let {\n      buttonRef,\n      dispatch,\n      readyToSelect,\n      selectCallbacks,\n      state: { selectionIndex, isExpanded },\n    } = useContext(MenuContext);\n    let ownRef = useRef<HTMLElement | null>(null);\n    // After the ref is mounted to the DOM node, we check to see if we have an\n    // explicit valueText prop before looking for the node's textContent for\n    // typeahead functionality.\n    let [valueText, setValueText] = useState(valueTextProp || \"\");\n    let setValueTextFromDom = useCallback(\n      (node) => {\n        if (node) {\n          ownRef.current = node;\n          if (\n            !valueTextProp ||\n            (node.textContent && valueText !== node.textContent)\n          ) {\n            setValueText(node.textContent);\n          }\n        }\n      },\n      [valueText, valueTextProp]\n    );\n\n    let ref = useForkedRef(forwardedRef, setValueTextFromDom);\n\n    let mouseEventStarted = useRef(false);\n\n    let index = useDescendant(\n      {\n        element: ownRef.current!,\n        key: valueText,\n        disabled,\n        isLink,\n      },\n      MenuDescendantContext,\n      indexProp\n    );\n    let isSelected = index === selectionIndex && !disabled;\n\n    // Update the callback ref array on every render\n    selectCallbacks.current[index] = onSelect;\n\n    function select() {\n      focus(buttonRef.current);\n      onSelect && onSelect();\n      dispatch({ type: CLICK_MENU_ITEM });\n    }\n\n    function handleClick(event: React.MouseEvent) {\n      if (isLink && !isRightClick(event.nativeEvent)) {\n        if (disabled) {\n          event.preventDefault();\n        } else {\n          select();\n        }\n      }\n    }\n\n    function handleDragStart(event: React.MouseEvent) {\n      // Because we don't preventDefault on mousedown for links (we need the\n      // native click event), clicking and holding on a link triggers a\n      // dragstart which we don't want.\n      if (isLink) {\n        event.preventDefault();\n      }\n    }\n\n    function handleMouseDown(event: React.MouseEvent) {\n      if (isRightClick(event.nativeEvent)) return;\n\n      if (isLink) {\n        // Signal that the mouse is down so we can react call the right function\n        // if the user is clicking on a link.\n        mouseEventStarted.current = true;\n      } else {\n        event.preventDefault();\n      }\n    }\n\n    function handleMouseEnter(event: React.MouseEvent) {\n      if (!isSelected && index != null && !disabled) {\n        dispatch({ type: SELECT_ITEM_AT_INDEX, payload: { index } });\n      }\n    }\n\n    function handleMouseLeave(event: React.MouseEvent) {\n      // Clear out selection when mouse over a non-menu item child.\n      dispatch({ type: CLEAR_SELECTION_INDEX });\n    }\n\n    function handleMouseMove() {\n      readyToSelect.current = true;\n      if (!isSelected && index != null && !disabled) {\n        dispatch({ type: SELECT_ITEM_AT_INDEX, payload: { index } });\n      }\n    }\n\n    function handleMouseUp(event: React.MouseEvent) {\n      if (!readyToSelect.current) {\n        readyToSelect.current = true;\n        return;\n      }\n      if (isRightClick(event.nativeEvent)) return;\n\n      if (isLink) {\n        // If a mousedown event was initiated on a menu link followed by a\n        // mouseup event on the same link, we do nothing; a click event will\n        // come next and handle selection. Otherwise, we trigger a click event.\n        if (mouseEventStarted.current) {\n          mouseEventStarted.current = false;\n        } else if (ownRef.current) {\n          ownRef.current.click();\n        }\n      } else {\n        if (!disabled) {\n          select();\n        }\n      }\n    }\n\n    // When the menu closes, reset readyToSelect for the next interaction.\n    useEffect(() => {\n      if (!isExpanded) {\n        readyToSelect.current = false;\n      }\n    }, [isExpanded, readyToSelect]);\n\n    // Any time a mouseup event occurs anywhere in the document, we reset the\n    // mouseEventStarted ref so we can check it again when needed.\n    useEffect(() => {\n      let ownerDocument = getOwnerDocument(ownRef.current) || document;\n      let listener = () => (mouseEventStarted.current = false);\n      ownerDocument.addEventListener(\"mouseup\", listener);\n      return () => ownerDocument.removeEventListener(\"mouseup\", listener);\n    }, []);\n\n    return (\n      <Comp\n        role=\"menuitem\"\n        id={useMenuItemId(index)}\n        tabIndex={-1}\n        {...props}\n        ref={ref}\n        aria-disabled={disabled || undefined}\n        data-reach-menu-item=\"\"\n        data-selected={isSelected ? \"\" : undefined}\n        data-valuetext={valueText}\n        onClick={wrapEvent(onClick, handleClick)}\n        onDragStart={wrapEvent(onDragStart, handleDragStart)}\n        onMouseDown={wrapEvent(onMouseDown, handleMouseDown)}\n        onMouseEnter={wrapEvent(onMouseEnter, handleMouseEnter)}\n        onMouseLeave={wrapEvent(onMouseLeave, handleMouseLeave)}\n        onMouseMove={wrapEvent(onMouseMove, handleMouseMove)}\n        onMouseUp={wrapEvent(onMouseUp, handleMouseUp)}\n      />\n    );\n  }\n);\n\nexport type MenuItemImplProps = {\n  /**\n   * You can put any type of content inside of a `<MenuItem>`.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitem-children\n   */\n  children: React.ReactNode;\n  /**\n   * Callback that fires when a `MenuItem` is selected.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitem-onselect\n   */\n  onSelect(): void;\n  index?: number;\n  isLink?: boolean;\n  valueText?: string;\n  /**\n   * Whether or not the item is disabled from selection and navigation.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitem-disabled\n   */\n  disabled?: boolean;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItem\n *\n * Handles menu selection. Must be a direct child of a `<MenuList>`.\n *\n * @see Docs https://reach.tech/menu-button#menuitem\n */\nexport const MenuItem = forwardRefWithAs<MenuItemProps, \"div\">(\n  function MenuItem({ as = \"div\", ...props }, forwardedRef) {\n    return <MenuItemImpl {...props} ref={forwardedRef} as={as} />;\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menuitem-props\n */\nexport type MenuItemProps = Omit<MenuItemImplProps, \"isLink\">;\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\";\n  MenuItem.propTypes = {\n    as: PropTypes.any,\n    onSelect: PropTypes.func.isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItems\n *\n * A low-level wrapper for menu items. Compose it with `MenuPopover` for more\n * control over the nested components and their rendered DOM nodes, or if you\n * need to nest arbitrary components between the outer wrapper and your list.\n *\n * @see Docs https://reach.tech/menu-button#menuitems\n */\nexport const MenuItems = forwardRefWithAs<MenuItemsProps, \"div\">(\n  function MenuItems(\n    { as: Comp = \"div\", children, id, onKeyDown, ...props },\n    forwardedRef\n  ) {\n    const {\n      menuId,\n      dispatch,\n      buttonRef,\n      menuRef,\n      selectCallbacks,\n      state: { isExpanded, buttonId, selectionIndex, typeaheadQuery },\n    } = useContext(MenuContext);\n    const menuItems = useDescendants(MenuDescendantContext);\n    const ref = useForkedRef(menuRef, forwardedRef);\n\n    useEffect(() => {\n      // Respond to user char key input with typeahead\n      const match = findItemFromTypeahead(menuItems, typeaheadQuery);\n      if (typeaheadQuery && match != null) {\n        dispatch({\n          type: SELECT_ITEM_AT_INDEX,\n          payload: { index: match },\n        });\n      }\n      let timeout = window.setTimeout(\n        () =>\n          typeaheadQuery && dispatch({ type: SEARCH_FOR_ITEM, payload: \"\" }),\n        1000\n      );\n      return () => window.clearTimeout(timeout);\n    }, [dispatch, menuItems, typeaheadQuery]);\n\n    const prevMenuItemsLength = usePrevious(menuItems.length);\n    const prevSelected = usePrevious(menuItems[selectionIndex]);\n    const prevSelectionIndex = usePrevious(selectionIndex);\n\n    useEffect(() => {\n      if (selectionIndex > menuItems.length - 1) {\n        // If for some reason our selection index is larger than our possible\n        // index range (let's say the last item is selected and the list\n        // dynamically updates), we need to select the last item in the list.\n        dispatch({\n          type: SELECT_ITEM_AT_INDEX,\n          payload: { index: menuItems.length - 1 },\n        });\n      } else if (\n        // Checks if\n        //  - menu length has changed\n        //  - selection index has not changed BUT selected item has changed\n        //\n        // This prevents any dynamic adding/removing of menu items from actually\n        // changing a user's expected selection.\n        prevMenuItemsLength !== menuItems.length &&\n        selectionIndex > -1 &&\n        prevSelected &&\n        prevSelectionIndex === selectionIndex &&\n        menuItems[selectionIndex] !== prevSelected\n      ) {\n        dispatch({\n          type: SELECT_ITEM_AT_INDEX,\n          payload: {\n            index: menuItems.findIndex((i) => i.key === prevSelected.key),\n          },\n        });\n      }\n    }, [\n      dispatch,\n      menuItems,\n      prevMenuItemsLength,\n      prevSelected,\n      prevSelectionIndex,\n      selectionIndex,\n    ]);\n\n    let handleKeyDown = wrapEvent(\n      function handleKeyDown(event: React.KeyboardEvent) {\n        let { key } = event;\n\n        if (!isExpanded) {\n          return;\n        }\n\n        switch (key) {\n          case \"Enter\":\n          case \" \":\n            let selected = menuItems.find(\n              (item) => item.index === selectionIndex\n            );\n            // For links, the Enter key will trigger a click by default, but for\n            // consistent behavior across menu items we'll trigger a click when\n            // the spacebar is pressed.\n            if (selected) {\n              if (selected.isLink && selected.element) {\n                selected.element.click();\n              } else {\n                event.preventDefault();\n                // Focus the button first by default when an item is selected.\n                // We fire the onSelect callback next so the app can manage\n                // focus if needed.\n                focus(buttonRef.current);\n                selectCallbacks.current[selected.index] &&\n                  selectCallbacks.current[selected.index]();\n                dispatch({ type: CLICK_MENU_ITEM });\n              }\n            }\n            break;\n          case \"Escape\":\n            focus(buttonRef.current);\n            dispatch({ type: CLOSE_MENU, payload: { buttonRef } });\n            break;\n          case \"Tab\":\n            // prevent leaving\n            event.preventDefault();\n            break;\n          default:\n            // Check if a user is typing some char keys and respond by setting\n            // the query state.\n            if (isString(key) && key.length === 1) {\n              const query = typeaheadQuery + key.toLowerCase();\n              dispatch({\n                type: SEARCH_FOR_ITEM,\n                payload: query,\n              });\n            }\n            break;\n        }\n      },\n      useDescendantKeyDown(MenuDescendantContext, {\n        currentIndex: selectionIndex,\n        orientation: \"vertical\",\n        rotate: false,\n        filter: (item) => !item.disabled,\n        callback: (index: number) => {\n          dispatch({\n            type: SELECT_ITEM_AT_INDEX,\n            payload: { index },\n          });\n        },\n        key: \"index\",\n      })\n    );\n\n    return (\n      // TODO: Should probably file a but in jsx-a11y, but this is correct\n      // according to https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n      // eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex\n      <Comp\n        // Refers to the descendant menuitem element that is visually indicated\n        // as focused.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n        aria-activedescendant={useMenuItemId(selectionIndex) || undefined}\n        // Refers to the element that contains the accessible name for the\n        // `menu`. The menu is labeled by the menu button.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n        aria-labelledby={buttonId || undefined}\n        // The element that contains the menu items displayed by activating the\n        // button has role menu.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        role=\"menu\"\n        tabIndex={-1}\n        {...props}\n        ref={ref}\n        data-reach-menu-items=\"\"\n        id={menuId}\n        onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n      >\n        {children}\n      </Comp>\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menuitems-props\n */\nexport type MenuItemsProps = {\n  /**\n   * Can contain only `MenuItem` or a `MenuLink`.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitems-children\n   */\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  MenuItems.displayName = \"MenuItems\";\n  MenuItems.propTypes = {\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuLink\n *\n * Handles linking to a different page in the menu. By default it renders `<a>`,\n * but also accepts any other kind of Link as long as the `Link` uses the\n * `React.forwardRef` API.\n *\n * Must be a direct child of a `<MenuList>`.\n *\n * @see Docs https://reach.tech/menu-button#menulink\n */\nexport const MenuLink = forwardRefWithAs<\n  MenuLinkProps & { component?: any },\n  \"a\"\n>(function MenuLink({ as = \"a\", component, onSelect, ...props }, forwardedRef) {\n  if (component) {\n    console.warn(\n      \"[@reach/menu-button]: Please use the `as` prop instead of `component`.\"\n    );\n  }\n\n  return (\n    <div role=\"none\" tabIndex={-1}>\n      <MenuItemImpl\n        {...props}\n        ref={forwardedRef}\n        data-reach-menu-link=\"\"\n        as={as}\n        isLink={true}\n        onSelect={onSelect || noop}\n      />\n    </div>\n  );\n});\n\n/**\n * @see Docs https://reach.tech/menu-button#menulink-props\n */\nexport type MenuLinkProps = Omit<MenuItemImplProps, \"isLink\" | \"onSelect\"> & {\n  onSelect?(): void;\n};\n\nif (__DEV__) {\n  MenuLink.displayName = \"MenuLink\";\n  MenuLink.propTypes = {\n    as: PropTypes.any,\n    component: PropTypes.any,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuList\n *\n * Wraps a DOM element that renders the menu items. Must be rendered inside of\n * a `<Menu>`.\n *\n * @see Docs https://reach.tech/menu-button#menulist\n */\nexport const MenuList = forwardRef<HTMLDivElement, MenuListProps>(\n  function MenuList({ portal = true, ...props }, forwardedRef) {\n    return (\n      <MenuPopover portal={portal}>\n        <MenuItems {...props} ref={forwardedRef} data-reach-menu-list=\"\" />\n      </MenuPopover>\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menulist-props\n */\nexport type MenuListProps = React.HTMLAttributes<HTMLDivElement> & {\n  /**\n   * Whether or not the popover should be rendered inside a portal. Defaults to\n   * `true`.\n   *\n   * @see Docs https://reach.tech/menu-button#menulist-portal\n   */\n  portal?: boolean;\n  /**\n   * Can contain only `MenuItem` or a `MenuLink`.\n   *\n   * @see Docs https://reach.tech/menu-button#menulist-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\";\n  MenuList.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuPopover\n *\n * A low-level wrapper for the popover that appears when a menu button is open.\n * You can compose it with `MenuItems` for more control over the nested\n * components and their rendered DOM nodes, or if you need to nest arbitrary\n * components between the outer wrapper and your list.\n *\n * @see Docs https://reach.tech/menu-button#menupopover\n */\nexport const MenuPopover = forwardRef<any, MenuPopoverProps>(\n  function MenuPopover(\n    { children, portal = true, position, ...props },\n    forwardedRef\n  ) {\n    const {\n      buttonRef,\n      buttonClickedRef,\n      dispatch,\n      menuRef,\n      popoverRef,\n      state: { isExpanded },\n    } = useContext(MenuContext);\n\n    const ref = useForkedRef(popoverRef, forwardedRef);\n\n    useEffect(() => {\n      function listener(event: MouseEvent) {\n        if (buttonClickedRef.current) {\n          buttonClickedRef.current = false;\n        } else {\n          // We on want to close only if focus rests outside the menu\n          if (isExpanded && popoverRef.current) {\n            if (!popoverRef.current.contains(event.target as Element)) {\n              dispatch({ type: CLOSE_MENU, payload: { buttonRef } });\n            }\n          }\n        }\n      }\n      window.addEventListener(\"mousedown\", listener);\n      return () => {\n        window.removeEventListener(\"mousedown\", listener);\n      };\n    }, [\n      buttonClickedRef,\n      buttonRef,\n      dispatch,\n      isExpanded,\n      menuRef,\n      popoverRef,\n    ]);\n\n    let commonProps = {\n      ref,\n      // TODO: remove in 1.0\n      \"data-reach-menu\": \"\",\n      \"data-reach-menu-popover\": \"\",\n      hidden: !isExpanded,\n      children,\n      ...props,\n    };\n\n    return portal ? (\n      <Popover\n        {...commonProps}\n        targetRef={buttonRef as any}\n        position={position}\n      />\n    ) : (\n      <div {...commonProps} />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menupopover-props\n */\nexport type MenuPopoverProps = React.HTMLAttributes<HTMLDivElement> & {\n  /**\n   * Must contain a `MenuItems`\n   *\n   * @see Docs https://reach.tech/menu-button#menupopover-children\n   */\n  children: React.ReactNode;\n  /**\n   * Whether or not the popover should be rendered inside a portal. Defaults to\n   * `true`.\n   *\n   * @see Docs https://reach.tech/menu-button#menupopover-portal\n   */\n  portal?: boolean;\n  /**\n   * A function used to determine the position of the popover in relation to the\n   * menu button. By default, the menu button will attempt to position the\n   * popover below the button aligned with its left edge. If this positioning\n   * results in collisions with any side of the window, the popover will be\n   * anchored to a different side to avoid those collisions if possible.\n   *\n   * @see Docs https://reach.tech/menu-button#menupopover-position\n   */\n  position?: Position;\n};\n\nif (__DEV__) {\n  MenuPopover.displayName = \"MenuPopover\";\n  MenuPopover.propTypes = {\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hook that exposes data for a given `Menu` component to its descendants.\n *\n * @see Docs https://reach.tech/menu-button#usemenubuttoncontext\n */\nexport function useMenuButtonContext(): MenuContextValue {\n  let {\n    state: { isExpanded },\n  } = useContext(MenuContext);\n  return useMemo(() => ({ isExpanded }), [isExpanded]);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * When a user's typed input matches the string displayed in a menu item, it is\n * expected that the matching menu item is selected. This is our matching\n * function.\n */\nfunction findItemFromTypeahead(\n  items: MenuButtonDescendant[],\n  string: string = \"\"\n) {\n  if (!string) {\n    return null;\n  }\n\n  const found = items.find((item) => {\n    return item.disabled\n      ? false\n      : item.element?.dataset?.valuetext?.toLowerCase().startsWith(string);\n  });\n  return found ? items.indexOf(found) : null;\n}\n\nfunction useMenuItemId(index: number | null) {\n  let { menuId } = useContext(MenuContext);\n  return index != null && index > -1\n    ? makeId(`option-${index}`, menuId)\n    : undefined;\n}\n\ninterface MenuButtonState {\n  isExpanded: boolean;\n  selectionIndex: number;\n  buttonId: null | string;\n  typeaheadQuery: string;\n}\n\ntype MenuButtonAction =\n  | { type: \"CLICK_MENU_ITEM\" }\n  | { type: \"CLOSE_MENU\"; payload: { buttonRef: ButtonRef } }\n  | { type: \"OPEN_MENU_AT_FIRST_ITEM\" }\n  | { type: \"OPEN_MENU_AT_INDEX\"; payload: { index: number } }\n  | { type: \"OPEN_MENU_CLEARED\" }\n  | {\n      type: \"SELECT_ITEM_AT_INDEX\";\n      payload: { max?: number; min?: number; index: number };\n    }\n  | { type: \"CLEAR_SELECTION_INDEX\" }\n  | { type: \"SET_BUTTON_ID\"; payload: string }\n  | { type: \"SEARCH_FOR_ITEM\"; payload: string };\n\nfunction isRightClick(nativeEvent: MouseEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n\nfunction focus<T extends HTMLElement = HTMLElement>(\n  element: T | undefined | null\n) {\n  element && element.focus();\n}\n\nfunction reducer(\n  state: MenuButtonState,\n  action: MenuButtonAction = {} as MenuButtonAction\n): MenuButtonState {\n  switch (action.type) {\n    case CLICK_MENU_ITEM:\n      return {\n        ...state,\n        isExpanded: false,\n        selectionIndex: -1,\n      };\n    case CLOSE_MENU:\n      return {\n        ...state,\n        isExpanded: false,\n        selectionIndex: -1,\n      };\n    case OPEN_MENU_AT_FIRST_ITEM:\n      return {\n        ...state,\n        isExpanded: true,\n        selectionIndex: 0,\n      };\n    case OPEN_MENU_AT_INDEX:\n      return {\n        ...state,\n        isExpanded: true,\n        selectionIndex: action.payload.index,\n      };\n    case OPEN_MENU_CLEARED:\n      return {\n        ...state,\n        isExpanded: true,\n        selectionIndex: -1,\n      };\n    case SELECT_ITEM_AT_INDEX:\n      if (action.payload.index >= 0) {\n        return {\n          ...state,\n          selectionIndex:\n            action.payload.max != null\n              ? Math.min(Math.max(action.payload.index, 0), action.payload.max)\n              : Math.max(action.payload.index, 0),\n        };\n      }\n      return state;\n    case CLEAR_SELECTION_INDEX:\n      return {\n        ...state,\n        selectionIndex: -1,\n      };\n    case SET_BUTTON_ID:\n      return {\n        ...state,\n        buttonId: action.payload,\n      };\n    case SEARCH_FOR_ITEM:\n      if (typeof action.payload !== \"undefined\") {\n        return {\n          ...state,\n          typeaheadQuery: action.payload,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype MenuButtonDescendant = Descendant<HTMLElement> & {\n  key: string;\n  isLink: boolean;\n  disabled?: boolean;\n};\n\ntype ButtonRef = React.RefObject<null | HTMLElement>;\ntype MenuRef = React.RefObject<null | HTMLElement>;\ntype PopoverRef = React.RefObject<null | HTMLElement>;\n\ninterface InternalMenuContextValue {\n  buttonRef: ButtonRef;\n  buttonClickedRef: React.MutableRefObject<boolean>;\n  dispatch: React.Dispatch<MenuButtonAction>;\n  menuId: string | undefined;\n  menuRef: MenuRef;\n  popoverRef: PopoverRef;\n  readyToSelect: React.MutableRefObject<boolean>;\n  selectCallbacks: React.MutableRefObject<(() => void)[]>;\n  state: MenuButtonState;\n}\n\nexport type MenuContextValue = {\n  isExpanded: boolean;\n  // id: string | undefined;\n};\n"],"names":["CLEAR_SELECTION_INDEX","CLICK_MENU_ITEM","CLOSE_MENU","OPEN_MENU_AT_FIRST_ITEM","OPEN_MENU_AT_INDEX","OPEN_MENU_CLEARED","SEARCH_FOR_ITEM","SELECT_ITEM_AT_INDEX","SET_BUTTON_ID","MenuDescendantContext","createDescendantContext","MenuContext","createNamedContext","initialState","buttonId","isExpanded","typeaheadQuery","selectionIndex","Menu","id","children","buttonRef","useRef","menuRef","popoverRef","useDescendantsInit","descendants","setDescendants","useReducer","reducer","state","dispatch","_id","useId","menuId","makeId","buttonClickedRef","selectCallbacks","readyToSelect","context","useEffect","window","__REACH_DISABLE_TOOLTIPS","requestAnimationFrame","focus","current","checkStyles","React","DescendantProvider","items","set","Provider","value","isFunction","isOpen","displayName","propTypes","PropTypes","oneOfType","func","node","MenuButton","forwardRefWithAs","forwardedRef","as","Comp","onKeyDown","onMouseDown","props","useContext","ref","useForkedRef","useDescendants","firstNonDisabledIndex","useMemo","findIndex","item","disabled","newButtonId","type","payload","handleKeyDown","event","key","preventDefault","index","handleMouseDown","isRightClick","nativeEvent","undefined","wrapEvent","MenuItemImpl","indexProp","isLink","onClick","onDragStart","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","onSelect","valueTextProp","valueText","ownRef","useState","setValueText","setValueTextFromDom","useCallback","textContent","mouseEventStarted","useDescendant","element","isSelected","select","handleClick","handleDragStart","handleMouseEnter","handleMouseLeave","handleMouseMove","handleMouseUp","click","ownerDocument","getOwnerDocument","document","listener","addEventListener","removeEventListener","role","useMenuItemId","tabIndex","MenuItem","any","isRequired","MenuItems","menuItems","match","findItemFromTypeahead","timeout","setTimeout","clearTimeout","prevMenuItemsLength","usePrevious","length","prevSelected","prevSelectionIndex","i","selected","find","isString","query","toLowerCase","useDescendantKeyDown","currentIndex","orientation","rotate","filter","callback","MenuLink","component","console","warn","noop","MenuList","forwardRef","portal","MenuPopover","position","contains","target","commonProps","hidden","Popover","targetRef","useMenuButtonContext","string","found","dataset","valuetext","startsWith","indexOf","which","button","action","max","Math","min"],"mappings":"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"}